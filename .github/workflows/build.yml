name: Build/Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: macos-latest
            build_script: build:mac
          - os: windows-latest
            build_script: build:win
          - os: ubuntu-latest
            build_script: build:linux

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Inkscape (for SVG to icon conversion)
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update && sudo apt-get install -y inkscape
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install inkscape
          elif [ "$RUNNER_OS" == "Windows" ]; then
            choco install inkscape --no-progress
          fi
        shell: bash

      - name: Set INKSCAPE_PATH Environment Variable
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ] || [ "$RUNNER_OS" == "macOS" ]; then
            echo "INKSCAPE_PATH=$(which inkscape)" >> $GITHUB_ENV
          elif [ "$RUNNER_OS" == "Windows" ]; then
            echo "INKSCAPE_PATH=C:\Program Files\Inkscape\bin\inkscape.exe" >> $GITHUB_ENV
          fi

      - name: Install dependencies
        run: npm install

      - name: Build Electron app
        run: npm run ${{ matrix.build_script }}
        env:
          INKSCAPE_PATH: ${{ env.INKSCAPE_PATH }}

      - name: List build artifacts
        shell: bash
        run: |
          echo "=== Build artifacts for ${{ runner.os }} ==="
          ls -la dist/ || echo "dist/ directory not found"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-build
          path: dist/

  upload_release:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: true # Merges all artifacts into a single directory

      - name: List all downloaded artifacts
        shell: bash
        run: |
          echo "=== All downloaded artifacts ==="
          find dist/ -type f -print

      - name: Prepare release assets
        shell: bash
        run: |
          mkdir release_assets
          echo "Moving release assets..."
          find dist -type f -name "*.dmg" -exec mv {} release_assets/ \;
          find dist -type f -name "YT Downloader Setup*.exe" -exec mv {} release_assets/ \;
          find dist -type f -name "*.AppImage" -exec mv {} release_assets/ \;
          find dist -type f -name "*.deb" -exec mv {} release_assets/ \;
          find dist -type f -name "latest*.yml" -exec mv {} release_assets/ \;
          echo "Final assets to be released:"
          ls -l release_assets

      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: release_assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
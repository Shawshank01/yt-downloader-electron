name: Build/Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: macos-latest
            build_script: build:mac
          - os: windows-latest
            build_script: build:win
          - os: ubuntu-latest
            build_script: build:linux

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Inkscape (for SVG to icon conversion)
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update && sudo apt-get install -y inkscape
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install inkscape
          elif [ "$RUNNER_OS" == "Windows" ]; then
            choco install inkscape --no-progress
          fi
        shell: bash

      - name: Install dependencies
        run: npm install

      - name: Build Electron app
        run: npm run ${{ matrix.build_script }}

      - name: List build artifacts
        shell: bash
        run: |
          echo "=== Build artifacts for ${{ runner.os }} ==="
          ls -la dist/ || echo "dist/ directory not found"
          find dist/ -type f -name "*.yml" -o -name "*.dmg" -o -name "*.exe" -o -name "*.AppImage" -o -name "*.deb" 2>/dev/null || echo "No matching files found"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-build
          path: dist/

  upload_release:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List all downloaded artifacts
        shell: bash
        run: |
          echo "=== All downloaded artifacts ==="
          find dist/ -type f 2>/dev/null | sort || echo "No files found in dist/"
          echo "=== Looking for specific file types ==="
          find dist/ -name "*.dmg" -o -name "*.exe" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.yml" 2>/dev/null | sort || echo "No matching files found"

      - name: Clean up unnecessary files
        shell: bash
        run: |
          echo "=== Cleaning up unnecessary files ==="
          # Remove portable exe files (keep only installer)
          find dist/ -name "yt-downloader-electron.exe" -delete
          # Remove elevate.exe files
          find dist/ -name "elevate.exe" -delete
          # Remove any other unnecessary files
          find dist/ -name "*.blockmap" -delete
          echo "=== Files after cleanup ==="
          find dist/ -type f 2>/dev/null | sort || echo "No files found in dist/"

      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            dist/**/*.dmg
            dist/**/yt-downloader-electron-*-win.exe
            dist/**/*.AppImage
            dist/**/*.deb
            dist/**/latest*.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}